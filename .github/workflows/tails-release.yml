name: Tails-Iso-Release
on:
  workflow_dispatch:
  push:
    paths:
      - "rust"
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write

env:
  PROJECT_NAME: seedmixer
  TAILS_VERSION: "6.18"

jobs:
  build-tails-iso:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: rust

    steps:
      - name: Check out this repo
        uses: actions/checkout@v3

      # Install dependencies for building Tails + 7-Zip for split volumes
      - name: Install Tails build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            genisoimage syslinux-utils syslinux live-build cdebootstrap squashfs-tools xorriso \
            curl make syslinux-common pkg-config libssl-dev ruby rubygems virtinst psmisc git dpkg-dev rake \
            libvirt-daemon-system dnsmasq-base ebtables faketime jq pigz qemu-system-x86 qemu-utils \
            vagrant vagrant-libvirt vmdb2 qemu-kvm libvirt-daemon-system libvirt-clients libvirt-dev \
            vagrant-libvirt bridge-utils p7zip-full

      # Download tails iso
      - name: download tails iso
        run: |
          wget https://download.tails.net/tails/stable/tails-amd64-${TAILS_VERSION}/tails-amd64-${TAILS_VERSION}.iso

      # Create dirs for mount
      - name: create directories for mounting
        run: |
          sudo mkdir -p /mnt/tails

      # Mount ISO and copy out
      - name: mount and copy ISO contents
        run: |
          sudo mount tails-amd64-${TAILS_VERSION}.iso /mnt/tails -t iso9660 -o loop
          sudo mkdir -p /tmp/tails
          sudo rsync -a /mnt/tails/ /tmp/tails/

      # Install Rust toolchain
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal

      # Build the Rust binary
      - name: Build Rust application
        run: cargo build --release

      # Extract Squash fs
      - name: extract squash fs
        run: |
          sudo mkdir -p tails-squashfs
          sudo unsquashfs -d ./tails-squashfs /tmp/tails/live/filesystem.squashfs

      # Copy binary
      - name: copy binary
        run: |
          sudo cp -rf target/release/${{ env.PROJECT_NAME }} ./tails-squashfs/usr/local/bin

      # Rebuild Squash fs
      - name: rebuild squash fs
        run: |
          sudo rm -rf /tmp/tails/live/filesystem.squashfs
          sudo mksquashfs ./tails-squashfs /tmp/tails/live/filesystem.squashfs -comp xz -e boot

      # Repackage ISO
      - name: repackage iso
        run: |
          sudo genisoimage -o tails-${{ env.PROJECT_NAME }}.iso -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -J -R -V "TAILS" /tmp/tails

      # Make bootable
      - name: make bootable
        run: |
          sudo isohybrid tails-${{ env.PROJECT_NAME }}.iso

      # Assign versions
      - name: Assign versions
        run: |
          mv tails-${{ env.PROJECT_NAME }}.iso ${{ github.workspace }}/rust/tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso

      # --- NEW: Split ISO into ~1.9 GiB 7z volumes ---
      - name: Create split 7z volumes (<2GiB each)
        run: |
          cd ${{ github.workspace }}/rust
          ISO="tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso"
          ARCHIVE="$ISO.7z"
          # -v1900m ensures each part is < 2 GiB
          7z a -t7z -m0=lzma2 -mx=9 -mmt=on -v1900m "$ARCHIVE" "$ISO"

      # Checksums for all parts (and keep a single .SHA256 file)
      - name: Generate checksums for split volumes
        run: |
          cd ${{ github.workspace }}/rust
          shasum -a 256 tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso.7z.* \
            > tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso.7z.SHA256

- name: Upload Tails split volumes
  if: startsWith(github.ref, 'refs/tags/')
  uses: softprops/action-gh-release@v2
  with:
    name: ${{ github.ref_name }}
    body: |
      **Split archive instructions**
      Download `*.iso.7z.001` (your browser will fetch the rest).
      Extract:
      ```
      7z x tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso.7z.001
      ```
      Verify:
      ```
      shasum -a 256 -c tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso.7z.SHA256
      ```
    files: |
      ${{ github.workspace }}/rust/tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso.7z.0*
      ${{ github.workspace }}/rust/tails-amd64-${{ env.TAILS_VERSION }}-${{ env.PROJECT_NAME }}-${{ github.ref_name }}.iso.7z.SHA256

      # Cleanup
      - name: cleanup
        if: always()
        run: |
          sudo rm -rf ./tails-squashfs
          sudo umount /mnt/tails || true
          sudo rm -rf tails-amd64-${{ env.TAILS_VERSION }}.iso

